name: Create doc issues on PR merge

# Action that creates issues in cockroachdb/docs when a PR is merged from
# cockroachdb/cockroach in the master or release-* branch and has a
# release note in the PR body.

on:
  pull_request:
    branches:
      - master
      - 'release-*'

    types: [closed]

jobs:
  create-doc-issue:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.merged == true }}
    env:
      PR_BODY: ${{ github.event.pull_request.body }}
      PR_TITLE: ${{ github.event.pull_request.title }}
      PR_NUMBER: ${{ github.event.pull_request.number }}
      REGEX: '[rR]elease [nN]otes? ?(\((\w.+)\):|:) (\w+.*)$'
    steps:
      - uses: actions-ecosystem/action-regex-match@v2
        id: regex-match
        with:
          text: ${{ env.PR_BODY }}
          regex: ${{ env.REGEX }}
          flags: 'gm'

      - name: Get and format release notes from PR body
        if: |
          steps.regex-match.outputs.match != '' &&
          startsWith(steps.regex-match.outputs.group3, 'none') == false &&
          startsWith(steps.regex-match.outputs.group2, 'bug') == false &&
          startsWith(steps.regex-match.outputs.group2, 'performance') == false
        id: prbody
        run: |
          create=true
          echo '${{ github.event.pull_request.body }}' > message
          cat message | sed -n '/[rR]elease [nN]ote/,$p' > temp
          sed -r 's/[rR]elease [nN]otes? ?\(.*: ?/''/g' temp > note
          body=$(cat note)
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}"
          echo ::set-output name=create::create
          echo ::set-output name=body::$body

      - name: Get commits
        id: 'get-pr-commits'
        uses: tim-actions/get-pr-commits@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get and format release notes from commits 
        id: commits
        uses: stefanprodan/kube-tools@v1
        with:
          command: |
            create=false
            echo '${{steps.get-pr-commits.outputs.commits}}' > commits.json 
            LEN=$( jq length commits.json )
            ctr=0
            while [ $ctr -lt $LEN ]
            do
              jq -r --arg i "$ctr" '.[$i|tonumber].commit.message' commits.json > message
              bool=$( jq -r --arg i "$ctr" '.[$i|tonumber].commit.message|test("[rR]elease [nN]ote")' commits.json )
              jq -r --arg i "$ctr" '.[$i|tonumber].commit.message|match("[rR]elease [nN]ote (?<type>.*): .*")' commits.json > match.json
              type=$( jq -r '.captures | .[] | .string' match.json )
              if [[ $bool == true && ! $type =~ .*[nN]one.* && ! $type =~ .*[bB]ug.* &&  ! $type =~ .*[pP]erformance.* ]]
              then
                create=true
                cat message | sed -n '/[rR]elease [nN]ote/,$p' > temp
                sed -r 's/[rR]elease [nN]otes? ?\(.*: ?/''/g' temp >> messages.txt
                echo  >> messages.txt
              fi
              ctr=`expr $ctr + 1`
            done
            body=$(cat messages.txt)
            body="${body//'%'/'%25'}"
            body="${body//$'\n'/'%0A'}"
            body="${body//$'\r'/'%0D'}"
            echo ::set-output name=create::$create
            echo ::set-output name=body::$body

      - name: Print what we have
        run: |
          echo 'PR body: ${{ steps.prbody.outputs.body }}' 
          echo 'Commits: ${{ steps.commits.outputs.body }}' 

      - name: Create docs issue
        if: |
          startsWith(steps.prbody.outputs.create, 'true') == true ||
          startsWith(steps.commits.outputs.create, 'true') == true
        uses: maxkomarychev/oction-create-issue@v0.7.1
        with:
          token: ${{ secrets.PAT }}
          owner: yzdocs 
          repo: docs 
          title: ${{ env.PR_TITLE }}
          body: |
            PR: https://github.com/cockroachdb/cockroach/pull/${{ env.PR_NUMBER }}

            From release notes:
            > ${{ steps.prbody.outputs.body }}
            > ${{ steps.commits.outputs.body }}
